/**
 * Hathora Cloud API
 * Welcome to the Hathora Cloud API documentation! Learn how to use the Hathora Cloud APIs to build and scale your game servers globally.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ExposedPort } from './ExposedPort';
import type { PickRoomExcludeKeyofRoomAllocations } from './PickRoomExcludeKeyofRoomAllocations';
import type { Region } from './Region';
/**
 *
 * @export
 * @interface ProcessWithRooms
 */
export interface ProcessWithRooms {
    /**
     * Measures network traffic leaving the process in bytes.
     * @type {number}
     * @memberof ProcessWithRooms
     */
    egressedBytes: number;
    /**
     *
     * @type {Date}
     * @memberof ProcessWithRooms
     * @deprecated
     */
    idleSince: Date | null;
    /**
     *
     * @type {Date}
     * @memberof ProcessWithRooms
     */
    activeConnectionsUpdatedAt: Date;
    /**
     * Tracks the number of active connections to a process.
     * @type {number}
     * @memberof ProcessWithRooms
     */
    activeConnections: number;
    /**
     *
     * @type {Date}
     * @memberof ProcessWithRooms
     */
    roomSlotsAvailableUpdatedAt: Date;
    /**
     * Tracks the number of room slots available on the process.
     * @type {number}
     * @memberof ProcessWithRooms
     */
    roomSlotsAvailable: number;
    /**
     * Process in drain will not accept any new rooms.
     * @type {boolean}
     * @memberof ProcessWithRooms
     */
    draining: boolean;
    /**
     * When the process has been terminated.
     * @type {Date}
     * @memberof ProcessWithRooms
     */
    terminatedAt: Date | null;
    /**
     * When the process is issued to stop. We use this to determine when we should stop billing.
     * @type {Date}
     * @memberof ProcessWithRooms
     */
    stoppingAt: Date | null;
    /**
     * When the process bound to the specified port. We use this to determine when we should start billing.
     * @type {Date}
     * @memberof ProcessWithRooms
     */
    startedAt: Date | null;
    /**
     * When the process started being provisioned.
     * @type {Date}
     * @memberof ProcessWithRooms
     */
    startingAt: Date;
    /**
     * Governs how many [rooms](https://hathora.dev/docs/concepts/hathora-entities#room) can be scheduled in a process.
     * @type {number}
     * @memberof ProcessWithRooms
     */
    roomsPerProcess: number;
    /**
     *
     * @type {Array<ExposedPort>}
     * @memberof ProcessWithRooms
     */
    additionalExposedPorts: Array<ExposedPort>;
    /**
     *
     * @type {ExposedPort}
     * @memberof ProcessWithRooms
     */
    exposedPort?: ExposedPort;
    /**
     *
     * @type {number}
     * @memberof ProcessWithRooms
     * @deprecated
     */
    port: number;
    /**
     *
     * @type {string}
     * @memberof ProcessWithRooms
     * @deprecated
     */
    host: string;
    /**
     *
     * @type {Region}
     * @memberof ProcessWithRooms
     */
    region: Region;
    /**
     * System generated unique identifier to a runtime instance of your game server.
     * @type {string}
     * @memberof ProcessWithRooms
     */
    processId: string;
    /**
     * System generated id for a deployment. Increments by 1.
     * @type {number}
     * @memberof ProcessWithRooms
     */
    deploymentId: number;
    /**
     * System generated unique identifier for an application.
     * @type {string}
     * @memberof ProcessWithRooms
     */
    appId: string;
    /**
     *
     * @type {Array<PickRoomExcludeKeyofRoomAllocations>}
     * @memberof ProcessWithRooms
     */
    rooms: Array<PickRoomExcludeKeyofRoomAllocations>;
    /**
     *
     * @type {number}
     * @memberof ProcessWithRooms
     */
    totalRooms: number;
}
/**
 * Check if a given object implements the ProcessWithRooms interface.
 */
export declare function instanceOfProcessWithRooms(value: object): boolean;
export declare function ProcessWithRoomsFromJSON(json: any): ProcessWithRooms;
export declare function ProcessWithRoomsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProcessWithRooms;
export declare function ProcessWithRoomsToJSON(value?: ProcessWithRooms | null): any;
