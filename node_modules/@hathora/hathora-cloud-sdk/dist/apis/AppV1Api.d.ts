/**
 * Hathora Cloud API
 * Welcome to the Hathora Cloud API documentation! Learn how to use the Hathora Cloud APIs to build and scale your game servers globally.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { AppConfig, Application, ApplicationWithDeployment } from '../models';
export interface CreateAppRequest {
    appConfig: AppConfig;
}
export interface DeleteAppRequest {
    appId: string;
}
export interface GetAppInfoRequest {
    appId: string;
}
export interface UpdateAppRequest {
    appId: string;
    appConfig: AppConfig;
}
/**
 * AppV1Api - interface
 *
 * @export
 * @interface AppV1ApiInterface
 */
export interface AppV1ApiInterface {
    /**
     * Create a new [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     * @param {AppConfig} appConfig
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppV1ApiInterface
     */
    createAppRaw(requestParameters: CreateAppRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Application>>;
    /**
     * Create a new [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     */
    createApp(appConfig: AppConfig, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Application>;
    /**
     * Delete an [application](https://hathora.dev/docs/concepts/hathora-entities#application) using `appId`. Your organization will lose access to this application.
     * @param {string} appId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppV1ApiInterface
     */
    deleteAppRaw(requestParameters: DeleteAppRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Delete an [application](https://hathora.dev/docs/concepts/hathora-entities#application) using `appId`. Your organization will lose access to this application.
     */
    deleteApp(appId: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Get details for an [application](https://hathora.dev/docs/concepts/hathora-entities#application) using `appId`.
     * @param {string} appId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppV1ApiInterface
     */
    getAppInfoRaw(requestParameters: GetAppInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Application>>;
    /**
     * Get details for an [application](https://hathora.dev/docs/concepts/hathora-entities#application) using `appId`.
     */
    getAppInfo(appId: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Application>;
    /**
     * Returns an unsorted list of your organization’s [applications](https://hathora.dev/docs/concepts/hathora-entities#application). An application is uniquely identified by an `appId`.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppV1ApiInterface
     */
    getAppsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ApplicationWithDeployment>>>;
    /**
     * Returns an unsorted list of your organization’s [applications](https://hathora.dev/docs/concepts/hathora-entities#application). An application is uniquely identified by an `appId`.
     */
    getApps(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ApplicationWithDeployment>>;
    /**
     * Update data for an existing [application](https://hathora.dev/docs/concepts/hathora-entities#application) using `appId`.
     * @param {string} appId
     * @param {AppConfig} appConfig
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppV1ApiInterface
     */
    updateAppRaw(requestParameters: UpdateAppRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Application>>;
    /**
     * Update data for an existing [application](https://hathora.dev/docs/concepts/hathora-entities#application) using `appId`.
     */
    updateApp(appId: string, appConfig: AppConfig, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Application>;
}
/**
 *
 */
export declare class AppV1Api extends runtime.BaseAPI implements AppV1ApiInterface {
    /**
     * Create a new [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     */
    createAppRaw(requestParameters: CreateAppRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Application>>;
    /**
     * Create a new [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     */
    createApp(appConfig: AppConfig, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Application>;
    /**
     * Delete an [application](https://hathora.dev/docs/concepts/hathora-entities#application) using `appId`. Your organization will lose access to this application.
     */
    deleteAppRaw(requestParameters: DeleteAppRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Delete an [application](https://hathora.dev/docs/concepts/hathora-entities#application) using `appId`. Your organization will lose access to this application.
     */
    deleteApp(appId: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Get details for an [application](https://hathora.dev/docs/concepts/hathora-entities#application) using `appId`.
     */
    getAppInfoRaw(requestParameters: GetAppInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Application>>;
    /**
     * Get details for an [application](https://hathora.dev/docs/concepts/hathora-entities#application) using `appId`.
     */
    getAppInfo(appId: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Application>;
    /**
     * Returns an unsorted list of your organization’s [applications](https://hathora.dev/docs/concepts/hathora-entities#application). An application is uniquely identified by an `appId`.
     */
    getAppsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ApplicationWithDeployment>>>;
    /**
     * Returns an unsorted list of your organization’s [applications](https://hathora.dev/docs/concepts/hathora-entities#application). An application is uniquely identified by an `appId`.
     */
    getApps(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ApplicationWithDeployment>>;
    /**
     * Update data for an existing [application](https://hathora.dev/docs/concepts/hathora-entities#application) using `appId`.
     */
    updateAppRaw(requestParameters: UpdateAppRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Application>>;
    /**
     * Update data for an existing [application](https://hathora.dev/docs/concepts/hathora-entities#application) using `appId`.
     */
    updateApp(appId: string, appConfig: AppConfig, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Application>;
}
