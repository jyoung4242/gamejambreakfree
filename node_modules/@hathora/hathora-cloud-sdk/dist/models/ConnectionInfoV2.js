"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Hathora Cloud API
 * Welcome to the Hathora Cloud API documentation! Learn how to use the Hathora Cloud APIs to build and scale your game servers globally.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConnectionInfoV2ToJSON = exports.ConnectionInfoV2FromJSONTyped = exports.ConnectionInfoV2FromJSON = exports.instanceOfConnectionInfoV2 = exports.ConnectionInfoV2StatusEnum = void 0;
const runtime_1 = require("../runtime");
const ExposedPort_1 = require("./ExposedPort");
/**
 * @export
 */
exports.ConnectionInfoV2StatusEnum = {
    Starting: 'starting',
    Active: 'active'
};
/**
 * Check if a given object implements the ConnectionInfoV2 interface.
 */
function instanceOfConnectionInfoV2(value) {
    let isInstance = true;
    isInstance = isInstance && "additionalExposedPorts" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "roomId" in value;
    return isInstance;
}
exports.instanceOfConnectionInfoV2 = instanceOfConnectionInfoV2;
function ConnectionInfoV2FromJSON(json) {
    return ConnectionInfoV2FromJSONTyped(json, false);
}
exports.ConnectionInfoV2FromJSON = ConnectionInfoV2FromJSON;
function ConnectionInfoV2FromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'additionalExposedPorts': (json['additionalExposedPorts'].map(ExposedPort_1.ExposedPortFromJSON)),
        'exposedPort': !(0, runtime_1.exists)(json, 'exposedPort') ? undefined : (0, ExposedPort_1.ExposedPortFromJSON)(json['exposedPort']),
        'status': json['status'],
        'roomId': json['roomId'],
    };
}
exports.ConnectionInfoV2FromJSONTyped = ConnectionInfoV2FromJSONTyped;
function ConnectionInfoV2ToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'additionalExposedPorts': (value.additionalExposedPorts.map(ExposedPort_1.ExposedPortToJSON)),
        'exposedPort': (0, ExposedPort_1.ExposedPortToJSON)(value.exposedPort),
        'status': value.status,
        'roomId': value.roomId,
    };
}
exports.ConnectionInfoV2ToJSON = ConnectionInfoV2ToJSON;
